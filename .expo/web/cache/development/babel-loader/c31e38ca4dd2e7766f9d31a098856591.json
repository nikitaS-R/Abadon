{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSelector } from \"react-redux\";\nimport Home from \"../home/Home.main\";\nimport List from \"../list/List.main\";\nimport Add from \"../operation/Add.main\";\nimport { initialPages } from \"./page.constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar PageController = function PageController() {\n  var _useState = useState(initialPages),\n    _useState2 = _slicedToArray(_useState, 2),\n    pages = _useState2[0],\n    setPages = _useState2[1];\n  var _useSelector = useSelector(function (state) {\n      return state.PageReducer;\n    }),\n    pageId = _useSelector.pageId;\n  var GetSelectedPage = function GetSelectedPage() {\n    var currentPageName = pages.find(function (page) {\n      return page.selected;\n    }).pageName;\n    switch (currentPageName) {\n      case \"Home\":\n        return _jsx(Home, {});\n      case \"Add\":\n        return _jsx(Add, {});\n      case \"List\":\n        return _jsx(List, {});\n    }\n  };\n  return _jsx(View, {\n    children: GetSelectedPage()\n  });\n};\nexport default PageController;","map":{"version":3,"names":["useState","useSelector","Home","List","Add","initialPages","PageController","pages","setPages","state","PageReducer","pageId","GetSelectedPage","currentPageName","find","page","selected","pageName"],"sources":["C:/Work/mobile_app/MobileProject/components/pages/Pages.main.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { View, Text } from \"react-native\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Home from \"../home/Home.main\";\r\nimport List from \"../list/List.main\";\r\nimport Add from \"../operation/Add.main\";\r\nimport { RootState } from \"../redux\";\r\nimport { initialPages } from \"./page.constants\";\r\nimport { PageType } from \"./page.type\";\r\n\r\nconst PageController = () => {\r\n  const [pages, setPages] = useState<PageType[]>(initialPages);\r\n  const { pageId } = useSelector((state: RootState) => state.PageReducer);\r\n  const GetSelectedPage = () => {\r\n    const currentPageName: string = pages.find(\r\n      (page) => page.selected\r\n    ).pageName;\r\n    switch (currentPageName) {\r\n      case \"Home\":\r\n        return <Home />;\r\n      case \"Add\":\r\n        return <Add />;\r\n      case \"List\":\r\n        return <List />;\r\n    }\r\n  };\r\n  return <View>{GetSelectedPage()}</View>;\r\n};\r\n\r\nexport default PageController;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAEjC,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,IAAI;AACX,OAAOC,IAAI;AACX,OAAOC,GAAG;AAEV,SAASC,YAAY;AAA2B;AAGhD,IAAMC,cAAc,GAAG,SAAjBA,cAAc,GAAS;EAC3B,gBAA0BN,QAAQ,CAAaK,YAAY,CAAC;IAAA;IAArDE,KAAK;IAAEC,QAAQ;EACtB,mBAAmBP,WAAW,CAAC,UAACQ,KAAgB;MAAA,OAAKA,KAAK,CAACC,WAAW;IAAA,EAAC;IAA/DC,MAAM,gBAANA,MAAM;EACd,IAAMC,eAAe,GAAG,SAAlBA,eAAe,GAAS;IAC5B,IAAMC,eAAuB,GAAGN,KAAK,CAACO,IAAI,CACxC,UAACC,IAAI;MAAA,OAAKA,IAAI,CAACC,QAAQ;IAAA,EACxB,CAACC,QAAQ;IACV,QAAQJ,eAAe;MACrB,KAAK,MAAM;QACT,OAAO,KAAC,IAAI,KAAG;MACjB,KAAK,KAAK;QACR,OAAO,KAAC,GAAG,KAAG;MAChB,KAAK,MAAM;QACT,OAAO,KAAC,IAAI,KAAG;IAAC;EAEtB,CAAC;EACD,OAAO,KAAC,IAAI;IAAA,UAAED,eAAe;EAAE,EAAQ;AACzC,CAAC;AAED,eAAeN,cAAc"},"metadata":{},"sourceType":"module"}