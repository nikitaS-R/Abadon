{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useRef, useState } from \"react\";\nimport Animated, { useAnimatedProps } from \"react-native-reanimated\";\nimport { Path } from \"react-native-svg\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AnimatedPath = Animated.createAnimatedComponent(Path);\nvar AnimatedStroke = function AnimatedStroke(_ref) {\n  var d = _ref.d,\n    progress = _ref.progress;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    length = _useState2[0],\n    setLength = _useState2[1];\n  var ref = useRef(null);\n  var animatedProps = useAnimatedProps(function () {\n    var _f = function _f() {\n      return {\n        strokeDashoffset: length - length * progress.value\n      };\n    };\n    _f._closure = {\n      length: length,\n      progress: progress\n    };\n    _f.asString = \"function _f(){const{length,progress}=jsThis._closure;{return{strokeDashoffset:length-length*progress.value};}}\";\n    _f.__workletHash = 14197011998719;\n    _f.__location = \"C:\\\\Work\\\\mobile_app\\\\Abadon\\\\components\\\\home\\\\AnimatedStroke.tsx (15:41)\";\n    return _f;\n  }());\n  return _jsx(_Fragment, {\n    children: _jsx(AnimatedPath, {\n      animatedProps: animatedProps,\n      onLayout: function onLayout() {\n        return setLength(ref.current.getTotalLength());\n      },\n      ref: ref,\n      d: d,\n      stroke: \"white\",\n      strokeWidth: 2,\n      strokeDasharray: length\n    })\n  });\n};\nexport default AnimatedStroke;","map":{"version":3,"names":["React","useRef","useState","Animated","useAnimatedProps","Path","AnimatedPath","createAnimatedComponent","AnimatedStroke","d","progress","length","setLength","ref","animatedProps","strokeDashoffset","value","current","getTotalLength"],"sources":["C:/Work/mobile_app/Abadon/components/home/AnimatedStroke.tsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport Animated, { useAnimatedProps } from \"react-native-reanimated\";\r\nimport { Path } from \"react-native-svg\";\r\n\r\ninterface AnimatedStrokeProps {\r\n  d: string;\r\n  progress: Animated.SharedValue<number>;\r\n}\r\n\r\nconst AnimatedPath = Animated.createAnimatedComponent(Path);\r\n\r\nconst AnimatedStroke = ({ d, progress }: AnimatedStrokeProps) => {\r\n  const [length, setLength] = useState(0);\r\n  const ref = useRef<Path>(null);\r\n  const animatedProps = useAnimatedProps(() => ({\r\n    strokeDashoffset: length - length * progress.value,\r\n  }));\r\n  return (\r\n    <>\r\n      <AnimatedPath\r\n        animatedProps={animatedProps}\r\n        onLayout={() => setLength(ref.current!.getTotalLength())}\r\n        ref={ref}\r\n        d={d}\r\n        stroke=\"white\"\r\n        strokeWidth={2}\r\n        strokeDasharray={length}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnimatedStroke;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAOC,QAAQ,IAAIC,gBAAgB,QAAQ,yBAAyB;AACpE,SAASC,IAAI,QAAQ,kBAAkB;AAAC;AAAA;AAOxC,IAAMC,YAAY,GAAGH,QAAQ,CAACI,uBAAuB,CAACF,IAAI,CAAC;AAE3D,IAAMG,cAAc,GAAG,SAAjBA,cAAc,OAA6C;EAAA,IAAvCC,CAAC,QAADA,CAAC;IAAEC,QAAQ,QAARA,QAAQ;EACnC,gBAA4BR,QAAQ,CAAC,CAAC,CAAC;IAAA;IAAhCS,MAAM;IAAEC,SAAS;EACxB,IAAMC,GAAG,GAAGZ,MAAM,CAAO,IAAI,CAAC;EAC9B,IAAMa,aAAa,GAAGV,gBAAgB;IAAA,SAAC;MAAA,OAAO;QAC5CW,gBAAgB,EAAEJ,MAAM,GAAGA,MAAM,GAAGD,QAAQ,CAACM;MAC/C,CAAC;IAAA,CAAC;IAAA;MAAA,QAdyBL,MAAM;MAAA,UAAGD;IAAQ;IAAA;IAAA;IAAA;IAAA;EAAA,IAczC;EACH,OACE;IAAA,UACE,KAAC,YAAY;MACX,aAAa,EAAEI,aAAc;MAC7B,QAAQ,EAAE;QAAA,OAAMF,SAAS,CAACC,GAAG,CAACI,OAAO,CAAEC,cAAc,EAAE,CAAC;MAAA,CAAC;MACzD,GAAG,EAAEL,GAAI;MACT,CAAC,EAAEJ,CAAE;MACL,MAAM,EAAC,OAAO;MACd,WAAW,EAAE,CAAE;MACf,eAAe,EAAEE;IAAO;EACxB,EACD;AAEP,CAAC;AAED,eAAeH,cAAc"},"metadata":{},"sourceType":"module"}