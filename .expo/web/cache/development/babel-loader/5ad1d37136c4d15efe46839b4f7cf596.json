{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  width = _Dimensions$get.width;\nvar height = width * 0.5;\nvar ImageSlider = function ImageSlider(props) {\n  var images = props.images;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    active = _useState2[0],\n    setActive = _useState2[1];\n  var onScrollChange = function onScrollChange(event) {\n    var slide = Math.ceil(event.nativeEvent.contentOffset.x / event.nativeEvent.layoutMeasurement.width);\n    if (slide !== active) {\n      setActive(slide);\n    }\n  };\n  return _jsxs(View, {\n    style: styled.imageSliderContainer,\n    children: [_jsx(ScrollView, {\n      pagingEnabled: true,\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      style: styled.imageSliderScroll,\n      onScroll: onScrollChange,\n      children: images.map(function (i, key) {\n        return _jsx(Image, {\n          source: i,\n          style: styled.imageSliderImage\n        }, key);\n      })\n    }), _jsx(View, {\n      style: styled.imageSliderSlider,\n      children: images.map(function (i, key) {\n        return _jsx(Text, {\n          style: key === active ? styled.imageSliderIconActive : styled.imageSliderIcon,\n          children: \"\\u2B24\"\n        }, key);\n      })\n    })]\n  });\n};\nvar styled = StyleSheet.create({\n  imageSliderContainer: {\n    flex: 1,\n    width: width,\n    height: height\n  },\n  imageSliderScroll: {\n    marginLeft: 10,\n    width: width,\n    height: height\n  },\n  imageSliderImage: {\n    width: width,\n    height: height,\n    resizeMode: 'cover'\n  },\n  imageSliderSlider: {\n    flexDirection: \"row\",\n    position: \"absolute\",\n    bottom: 0,\n    alignSelf: \"center\"\n  },\n  imageSliderIcon: {\n    fontSize: width / 30,\n    padding: 3,\n    color: \"#888\"\n  },\n  imageSliderIconActive: {\n    fontSize: width / 30,\n    padding: 3,\n    color: \"#fff\"\n  }\n});\nexport default ImageSlider;","map":{"version":3,"names":["useState","Dimensions","get","width","height","ImageSlider","props","images","active","setActive","onScrollChange","event","slide","Math","ceil","nativeEvent","contentOffset","x","layoutMeasurement","styled","imageSliderContainer","imageSliderScroll","map","i","key","imageSliderImage","imageSliderSlider","imageSliderIconActive","imageSliderIcon","StyleSheet","create","flex","marginLeft","resizeMode","flexDirection","position","bottom","alignSelf","fontSize","padding","color"],"sources":["C:/Work/mobile_app/Abadon/components/containers/imageSlider.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Image,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Dimensions,\r\n  Text,\r\n  NativeSyntheticEvent,\r\n  NativeScrollEvent,\r\n} from \"react-native\";\r\n\r\ntype ImageSliderProps = {\r\n  images: any[];\r\n};\r\n\r\nconst { width } = Dimensions.get(\"window\");\r\nconst height = width * 0.5;\r\n\r\nconst ImageSlider = (props) => {\r\n  const images = props.images;\r\n  const [active, setActive] = useState<number>(0);\r\n\r\n  const onScrollChange = (event: NativeSyntheticEvent<NativeScrollEvent>) => {\r\n    const slide = Math.ceil(\r\n      event.nativeEvent.contentOffset.x /\r\n        event.nativeEvent.layoutMeasurement.width\r\n    );\r\n    if (slide !== active) {\r\n      setActive(slide);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styled.imageSliderContainer}>\r\n      <ScrollView\r\n        pagingEnabled\r\n        horizontal\r\n        showsHorizontalScrollIndicator={false}\r\n        style={styled.imageSliderScroll}\r\n        onScroll={onScrollChange}\r\n      >\r\n        {images.map((i, key) => (\r\n          <Image key={key} source={i} style={styled.imageSliderImage} />\r\n        ))}\r\n      </ScrollView>\r\n      <View style={styled.imageSliderSlider}>\r\n        {images.map((i, key) => (\r\n          <Text\r\n            key={key}\r\n            style={\r\n              key === active\r\n                ? styled.imageSliderIconActive\r\n                : styled.imageSliderIcon\r\n            }\r\n          >\r\n            â¬¤\r\n          </Text>\r\n        ))}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\nconst styled = StyleSheet.create({\r\n  imageSliderContainer: {\r\n    flex: 1,\r\n    width: width,\r\n    height: height,\r\n  },\r\n  imageSliderScroll: {\r\n    marginLeft: 10,\r\n    width: width,\r\n    height: height,\r\n  },\r\n  imageSliderImage: {\r\n    width: width,\r\n    height: height,\r\n    resizeMode:'cover',\r\n  },\r\n  imageSliderSlider: {\r\n    flexDirection: \"row\",\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    alignSelf: \"center\",\r\n  },\r\n  imageSliderIcon: {\r\n    fontSize: width / 30,\r\n    padding: 3,\r\n    color: \"#888\",\r\n  },\r\n  imageSliderIconActive: {\r\n    fontSize: width / 30,\r\n    padding: 3,\r\n    color: \"#fff\",\r\n  },\r\n});\r\n\r\nexport default ImageSlider;\r\n"],"mappings":";AAAA,SAAoBA,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgB5C,sBAAkBC,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC;EAAlCC,KAAK,mBAALA,KAAK;AACb,IAAMC,MAAM,GAAGD,KAAK,GAAG,GAAG;AAE1B,IAAME,WAAW,GAAG,SAAdA,WAAW,CAAIC,KAAK,EAAK;EAC7B,IAAMC,MAAM,GAAGD,KAAK,CAACC,MAAM;EAC3B,gBAA4BP,QAAQ,CAAS,CAAC,CAAC;IAAA;IAAxCQ,MAAM;IAAEC,SAAS;EAExB,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAIC,KAA8C,EAAK;IACzE,IAAMC,KAAK,GAAGC,IAAI,CAACC,IAAI,CACrBH,KAAK,CAACI,WAAW,CAACC,aAAa,CAACC,CAAC,GAC/BN,KAAK,CAACI,WAAW,CAACG,iBAAiB,CAACf,KAAK,CAC5C;IACD,IAAIS,KAAK,KAAKJ,MAAM,EAAE;MACpBC,SAAS,CAACG,KAAK,CAAC;IAClB;EACF,CAAC;EAED,OACE,MAAC,IAAI;IAAC,KAAK,EAAEO,MAAM,CAACC,oBAAqB;IAAA,WACvC,KAAC,UAAU;MACT,aAAa;MACb,UAAU;MACV,8BAA8B,EAAE,KAAM;MACtC,KAAK,EAAED,MAAM,CAACE,iBAAkB;MAChC,QAAQ,EAAEX,cAAe;MAAA,UAExBH,MAAM,CAACe,GAAG,CAAC,UAACC,CAAC,EAAEC,GAAG;QAAA,OACjB,KAAC,KAAK;UAAW,MAAM,EAAED,CAAE;UAAC,KAAK,EAAEJ,MAAM,CAACM;QAAiB,GAA/CD,GAAG,CAA+C;MAAA,CAC/D;IAAC,EACS,EACb,KAAC,IAAI;MAAC,KAAK,EAAEL,MAAM,CAACO,iBAAkB;MAAA,UACnCnB,MAAM,CAACe,GAAG,CAAC,UAACC,CAAC,EAAEC,GAAG;QAAA,OACjB,KAAC,IAAI;UAEH,KAAK,EACHA,GAAG,KAAKhB,MAAM,GACVW,MAAM,CAACQ,qBAAqB,GAC5BR,MAAM,CAACS,eACZ;UAAA,UACF;QAED,GAROJ,GAAG,CAQH;MAAA,CACR;IAAC,EACG;EAAA,EACF;AAEX,CAAC;AACD,IAAML,MAAM,GAAGU,UAAU,CAACC,MAAM,CAAC;EAC/BV,oBAAoB,EAAE;IACpBW,IAAI,EAAE,CAAC;IACP5B,KAAK,EAAEA,KAAK;IACZC,MAAM,EAAEA;EACV,CAAC;EACDiB,iBAAiB,EAAE;IACjBW,UAAU,EAAE,EAAE;IACd7B,KAAK,EAAEA,KAAK;IACZC,MAAM,EAAEA;EACV,CAAC;EACDqB,gBAAgB,EAAE;IAChBtB,KAAK,EAAEA,KAAK;IACZC,MAAM,EAAEA,MAAM;IACd6B,UAAU,EAAC;EACb,CAAC;EACDP,iBAAiB,EAAE;IACjBQ,aAAa,EAAE,KAAK;IACpBC,QAAQ,EAAE,UAAU;IACpBC,MAAM,EAAE,CAAC;IACTC,SAAS,EAAE;EACb,CAAC;EACDT,eAAe,EAAE;IACfU,QAAQ,EAAEnC,KAAK,GAAG,EAAE;IACpBoC,OAAO,EAAE,CAAC;IACVC,KAAK,EAAE;EACT,CAAC;EACDb,qBAAqB,EAAE;IACrBW,QAAQ,EAAEnC,KAAK,GAAG,EAAE;IACpBoC,OAAO,EAAE,CAAC;IACVC,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAenC,WAAW"},"metadata":{},"sourceType":"module"}