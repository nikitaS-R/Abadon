{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { NavigationContainer, useNavigationContainerRef } from \"@react-navigation/native\";\nimport Exile from \"../exile/exile.main\";\nimport Home from \"../home/Home.main\";\nimport List from \"../list/list.main\";\nimport HomeSvg from \"../assets/svg/HomeSvg\";\nimport ExileSvg from \"../assets/svg/ExileSvg\";\nimport ListSvg from \"../assets/svg/ListSvg\";\nimport { useRef, useState } from \"react\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport ListDemon from \"../list/list.demon\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\nexport var TabNavigator = function TabNavigator() {\n  var navigationRef = useNavigationContainerRef();\n  var routeNameRef = useRef();\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isSound = _useState2[0],\n    setIsSound = _useState2[1];\n  return _jsx(NavigationContainer, {\n    ref: navigationRef,\n    onReady: function onReady() {\n      routeNameRef.current = navigationRef.getCurrentRoute().name;\n    },\n    onStateChange: function onStateChange() {\n      var c = navigationRef.getCurrentRoute().name;\n      c === \"Home\" ? setIsSound(true) : setIsSound(false);\n    },\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: {\n        headerShown: false,\n        tabBarActiveTintColor: \"#AF3E3E\",\n        tabBarInactiveTintColor: \"gray\",\n        tabBarStyle: {\n          height: 65,\n          backgroundColor: \"#501E23\",\n          borderTopColor: \"#501E23\"\n        },\n        tabBarLabelStyle: {\n          fontSize: 14\n        }\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        options: {\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n              size = _ref.size;\n            return _jsx(HomeSvg, {\n              color: color\n            });\n          }\n        },\n        children: function children() {\n          return _jsx(Home, {\n            isSound: isSound\n          });\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Exile\",\n        component: Exile,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color,\n              size = _ref2.size;\n            return _jsx(ExileSvg, {\n              color: color\n            });\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"ListDemon\",\n        component: StackNavigator,\n        options: {\n          tabBarLabel: \"Demons\",\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color,\n              size = _ref3.size;\n            return _jsx(ListSvg, {\n              color: color\n            });\n          }\n        }\n      })]\n    })\n  });\n};\nvar StackNavigator = function StackNavigator() {\n  return _jsx(NavigationContainer, {\n    independent: true,\n    children: _jsxs(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"List\",\n        component: List\n      }), _jsx(Stack.Screen, {\n        name: \"Demon\",\n        component: ListDemon\n      })]\n    })\n  });\n};\nexport default TabNavigator;","map":{"version":3,"names":["createBottomTabNavigator","NavigationContainer","useNavigationContainerRef","Exile","Home","List","HomeSvg","ExileSvg","ListSvg","useRef","useState","createNativeStackNavigator","ListDemon","Stack","Tab","TabNavigator","navigationRef","routeNameRef","isSound","setIsSound","current","getCurrentRoute","name","c","headerShown","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarStyle","height","backgroundColor","borderTopColor","tabBarLabelStyle","fontSize","tabBarIcon","color","size","StackNavigator","tabBarLabel"],"sources":["C:/Work/mobile_app/Abadon/components/navigator/tabNavigator.tsx"],"sourcesContent":["import { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport {\r\n  NavigationContainer,\r\n  useNavigationContainerRef,\r\n} from \"@react-navigation/native\";\r\nimport Exile from \"../exile/exile.main\";\r\nimport Home from \"../home/Home.main\";\r\nimport List from \"../list/list.main\";\r\nimport HomeSvg from \"../assets/svg/HomeSvg\";\r\nimport ExileSvg from \"../assets/svg/ExileSvg\";\r\nimport ListSvg from \"../assets/svg/ListSvg\";\r\nimport { useRef, useState } from \"react\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport ListDemon from \"../list/list.demon\";\r\nimport { View } from \"react-native\";\r\nconst Stack = createNativeStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport const TabNavigator = () => {\r\n  const navigationRef = useNavigationContainerRef();\r\n  const routeNameRef = useRef<any>();\r\n  const [isSound, setIsSound] = useState<boolean>(true);\r\n  return (\r\n    <NavigationContainer\r\n      ref={navigationRef}\r\n      onReady={() => {\r\n        routeNameRef.current = navigationRef.getCurrentRoute().name;\r\n      }}\r\n      onStateChange={() => {\r\n        const c: string = navigationRef.getCurrentRoute().name;\r\n        c === \"Home\" ? setIsSound(true) : setIsSound(false);\r\n      }}\r\n    >\r\n      <Tab.Navigator\r\n        screenOptions={{\r\n          headerShown: false,\r\n          tabBarActiveTintColor: \"#AF3E3E\",\r\n          tabBarInactiveTintColor: \"gray\",\r\n          tabBarStyle: {\r\n            height: 65,\r\n            backgroundColor: \"#501E23\",\r\n            borderTopColor: \"#501E23\",\r\n          },\r\n          tabBarLabelStyle: {\r\n            fontSize: 14,\r\n          },\r\n        }}\r\n      >\r\n        <Tab.Screen\r\n          name=\"Home\"\r\n          options={{\r\n            tabBarIcon: ({ color, size }) => <HomeSvg color={color} />,\r\n          }}\r\n        >\r\n          {() => <Home isSound={isSound} />}\r\n        </Tab.Screen>\r\n        <Tab.Screen\r\n          name=\"Exile\"\r\n          component={Exile}\r\n          options={{\r\n            tabBarIcon: ({ color, size }) => <ExileSvg color={color} />,\r\n          }}\r\n        />\r\n        <Tab.Screen\r\n          name=\"ListDemon\"\r\n          component={StackNavigator}\r\n          options={{\r\n            tabBarLabel: \"Demons\",\r\n            tabBarIcon: ({ color, size }) => <ListSvg color={color} />,\r\n          }}\r\n        />\r\n      </Tab.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nconst StackNavigator = () => {\r\n  return (\r\n    <NavigationContainer independent>\r\n      <Stack.Navigator\r\n        screenOptions={{\r\n          headerShown: false,\r\n        }}\r\n      >\r\n        <Stack.Screen name=\"List\" component={List} />\r\n        <Stack.Screen name=\"Demon\" component={ListDemon} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default TabNavigator;\r\n"],"mappings":";AAAA,SAASA,wBAAwB,QAAQ,+BAA+B;AACxE,SACEC,mBAAmB,EACnBC,yBAAyB,QACpB,0BAA0B;AACjC,OAAOC,KAAK;AACZ,OAAOC,IAAI;AACX,OAAOC,IAAI;AACX,OAAOC,OAAO;AACd,OAAOC,QAAQ;AACf,OAAOC,OAAO;AACd,SAASC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACxC,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAOC,SAAS;AAA2B;AAAA;AAE3C,IAAMC,KAAK,GAAGF,0BAA0B,EAAE;AAC1C,IAAMG,GAAG,GAAGd,wBAAwB,EAAE;AAEtC,OAAO,IAAMe,YAAY,GAAG,SAAfA,YAAY,GAAS;EAChC,IAAMC,aAAa,GAAGd,yBAAyB,EAAE;EACjD,IAAMe,YAAY,GAAGR,MAAM,EAAO;EAClC,gBAA8BC,QAAQ,CAAU,IAAI,CAAC;IAAA;IAA9CQ,OAAO;IAAEC,UAAU;EAC1B,OACE,KAAC,mBAAmB;IAClB,GAAG,EAAEH,aAAc;IACnB,OAAO,EAAE,mBAAM;MACbC,YAAY,CAACG,OAAO,GAAGJ,aAAa,CAACK,eAAe,EAAE,CAACC,IAAI;IAC7D,CAAE;IACF,aAAa,EAAE,yBAAM;MACnB,IAAMC,CAAS,GAAGP,aAAa,CAACK,eAAe,EAAE,CAACC,IAAI;MACtDC,CAAC,KAAK,MAAM,GAAGJ,UAAU,CAAC,IAAI,CAAC,GAAGA,UAAU,CAAC,KAAK,CAAC;IACrD,CAAE;IAAA,UAEF,MAAC,GAAG,CAAC,SAAS;MACZ,aAAa,EAAE;QACbK,WAAW,EAAE,KAAK;QAClBC,qBAAqB,EAAE,SAAS;QAChCC,uBAAuB,EAAE,MAAM;QAC/BC,WAAW,EAAE;UACXC,MAAM,EAAE,EAAE;UACVC,eAAe,EAAE,SAAS;UAC1BC,cAAc,EAAE;QAClB,CAAC;QACDC,gBAAgB,EAAE;UAChBC,QAAQ,EAAE;QACZ;MACF,CAAE;MAAA,WAEF,KAAC,GAAG,CAAC,MAAM;QACT,IAAI,EAAC,MAAM;QACX,OAAO,EAAE;UACPC,UAAU,EAAE;YAAA,IAAGC,KAAK,QAALA,KAAK;cAAEC,IAAI,QAAJA,IAAI;YAAA,OAAO,KAAC,OAAO;cAAC,KAAK,EAAED;YAAM,EAAG;UAAA;QAC5D,CAAE;QAAA,UAED;UAAA,OAAM,KAAC,IAAI;YAAC,OAAO,EAAEhB;UAAQ,EAAG;QAAA;MAAA,EACtB,EACb,KAAC,GAAG,CAAC,MAAM;QACT,IAAI,EAAC,OAAO;QACZ,SAAS,EAAEf,KAAM;QACjB,OAAO,EAAE;UACP8B,UAAU,EAAE;YAAA,IAAGC,KAAK,SAALA,KAAK;cAAEC,IAAI,SAAJA,IAAI;YAAA,OAAO,KAAC,QAAQ;cAAC,KAAK,EAAED;YAAM,EAAG;UAAA;QAC7D;MAAE,EACF,EACF,KAAC,GAAG,CAAC,MAAM;QACT,IAAI,EAAC,WAAW;QAChB,SAAS,EAAEE,cAAe;QAC1B,OAAO,EAAE;UACPC,WAAW,EAAE,QAAQ;UACrBJ,UAAU,EAAE;YAAA,IAAGC,KAAK,SAALA,KAAK;cAAEC,IAAI,SAAJA,IAAI;YAAA,OAAO,KAAC,OAAO;cAAC,KAAK,EAAED;YAAM,EAAG;UAAA;QAC5D;MAAE,EACF;IAAA;EACY,EACI;AAE1B,CAAC;AAED,IAAME,cAAc,GAAG,SAAjBA,cAAc,GAAS;EAC3B,OACE,KAAC,mBAAmB;IAAC,WAAW;IAAA,UAC9B,MAAC,KAAK,CAAC,SAAS;MACd,aAAa,EAAE;QACbZ,WAAW,EAAE;MACf,CAAE;MAAA,WAEF,KAAC,KAAK,CAAC,MAAM;QAAC,IAAI,EAAC,MAAM;QAAC,SAAS,EAAEnB;MAAK,EAAG,EAC7C,KAAC,KAAK,CAAC,MAAM;QAAC,IAAI,EAAC,OAAO;QAAC,SAAS,EAAEO;MAAU,EAAG;IAAA;EACnC,EACE;AAE1B,CAAC;AAED,eAAeG,YAAY"},"metadata":{},"sourceType":"module"}