{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { initialPages } from \"./page.constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar PageController = function PageController() {\n  var _useState = useState(initialPages),\n    _useState2 = _slicedToArray(_useState, 2),\n    pages = _useState2[0],\n    setPages = _useState2[1];\n  return _jsx(View, {\n    children: GetSelectedPage()\n  });\n};\nexport default PageController;","map":{"version":3,"names":["useState","initialPages","PageController","pages","setPages","GetSelectedPage"],"sources":["C:/Work/mobile_app/MobileProject/components/pages/Pages.main.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { View, Text } from \"react-native\";\r\nimport Home from \"../home/Home.main\";\r\nimport List from \"../list/List.main\";\r\nimport Add from \"../operation/Add.main\";\r\nimport { initialPages } from \"./page.constants\";\r\nimport { PageType } from \"./page.type\";\r\n\r\nconst PageController = () => {\r\n  const [pages, setPages] = useState<PageType[]>(initialPages);\r\n\r\n  // const GetSelectedPage = () => {\r\n  //   const currentPageName: string = pages.find(\r\n  //     (page) => page.selected\r\n  //   ).pageName;\r\n  //   switch (currentPageName) {\r\n  //     case \"Home\":\r\n  //       return <Home />;\r\n  //     case \"Add\":\r\n  //       return <Add />;\r\n  //     case \"List\":\r\n  //       return <List />;\r\n  //   }\r\n  // };\r\n  return <View>{GetSelectedPage()}</View>;\r\n};\r\n\r\nexport default PageController;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAKjC,SAASC,YAAY;AAA2B;AAGhD,IAAMC,cAAc,GAAG,SAAjBA,cAAc,GAAS;EAC3B,gBAA0BF,QAAQ,CAAaC,YAAY,CAAC;IAAA;IAArDE,KAAK;IAAEC,QAAQ;EAetB,OAAO,KAAC,IAAI;IAAA,UAAEC,eAAe;EAAE,EAAQ;AACzC,CAAC;AAED,eAAeH,cAAc"},"metadata":{},"sourceType":"module"}